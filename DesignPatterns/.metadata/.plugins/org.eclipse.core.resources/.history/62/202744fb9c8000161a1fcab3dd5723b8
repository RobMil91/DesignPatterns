package features;

import ingredientFactory.*;

//Main class doesnt have to important anyth ingredients?!
//this supposed to be so?

/**
 * The Abstract Facotry pattern uses interfaces for the ingredients
 * and creates a bunch of classes with these interfaces which are
 * then implemented into the IngredientFactory and especially choosen
 * by the concret NY Factory for example
 * 
 * @author robin
 *
 */
public class AbstractFactoryTestDrive {
	
	public static void main(String[] args) {
		//create to stores
		PizzaStore nyStore = new NYPizzaStore();
		PizzaStore chicagoStore = new ChicagoPizzaStore();

		//create an NY cheese pizza
		Pizza pizza = nyStore.orderPizza("cheese");
		System.out.println("Ordered a Cheese Pizza from nyStore " + pizza.toString() + "\n");
		
		//create an NY cheese pizza
		//very weird to use the same object pizza for a different pizza it overwrites the old pizza..
		 pizza = chicagoStore.orderPizza("cheese");
		System.out.println("Ordered a Cheese Pizza from chicago store " + pizza.toString() + "\n");
		
	}

}
